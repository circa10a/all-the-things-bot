const moment = require('moment');
const schedule = require('node-schedule');
const Snoowrap = require('snoowrap');

const daysUntilHalloween = require('../../../lib/days-until-halloween');
const randomEmoji = require('../../../lib/emojis');
const log = require('../../../lib/logger');
const { reddit: { halloween } } = require('../../config');

const r = new Snoowrap({
  userAgent: 'halloween-bot',
  clientId: halloween.clientID,
  clientSecret: halloween.clientSecret,
  username: halloween.username,
  password: halloween.password,
});

/* The second counter is necessary for this cron scheduler
   because if just a minute is specified, the job is run for
   the entire minute. Therefore posting to reddit for 60 seconds
   until the ratelimit is reached.
   This is another option but I prefer cron syntax
   https://github.com/node-schedule/node-schedule#date-based-scheduling
*/

const dayContext = () => {
  if (daysUntilHalloween(moment().year()) === 1) {
    return 'day';
  }
  return 'days';
};

const botMsg = `*I am a bot and this was an autogenerated message*.  
                *This bot is scheduled to post every Friday and Halloween on the witching hour*.`;

const jobs = () => [{
  // Friday at 03:00
  schedule: '0 0 3 * * 5',
  // Prevent immutability by using direct function call instead of storing in variable
  title: `${randomEmoji()} ${daysUntilHalloween(moment().year())} ${dayContext()} until Halloween! ${randomEmoji()}`,
  text: botMsg,
},
{
  // Halloween at 03:00
  schedule: '0 0 3 31 10 *',
  title: 'ðŸŽƒ HAPPY HALLOWEEN ðŸŽƒ',
  text: botMsg,
}];

const execute = () => {
  jobs().forEach((job, index) => {
    log.info(`Scheduling ${jobs()[index].title}`, halloween.logging);
    schedule.scheduleJob(job.schedule, () => {
      // Post to halloween subreddit
      r.getSubreddit(halloween.subreddit)
        .submitSelfpost({
          title: jobs()[index].title,
          text: jobs()[index].text,
        });
      log.info(`Posted at: ${moment().format('YYYY-MM-DD HH:mm:ss')}`, halloween.logging);
    });
  });
};

module.exports = execute;
